syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "xyz.potter.showcase.budget.proto";
option java_outer_classname = "BudgetProto";

enum CalculateOn {
  PER_PAYCHECK = 0;
	MONTHLY_AMOUNT = 1;
	ANNUAL_AMOUNT = 2;
	PERCENT_NET = 3;
	PERCENT_GROSS = 4;
}

// Budget
message Budgets {
  repeated Budget budget = 1;
}
message Budget {
  string id = 1;
  string title = 2;
}
service BudgetService {
  rpc findById (google.protobuf.StringValue) returns (Budget);
  rpc findAll (google.protobuf.Empty) returns (stream Budget);
  rpc create (Budget) returns (Budget);
  rpc update (Budget) returns (Budget);
  rpc delete (google.protobuf.StringValue) returns (google.protobuf.Empty);  
}

// Category
message Categories {
  repeated Category category = 1;
}
message Category {
  string id = 1;
  string title = 2;
  string budgetId = 3;
}
service CategoryService {
  rpc findById (google.protobuf.StringValue) returns (Category);
  rpc findByBudgetId (google.protobuf.StringValue) returns (stream Category);
  rpc create (Budget) returns (Category);
  rpc update (Budget) returns (Category);
  rpc delete (google.protobuf.StringValue) returns (google.protobuf.Empty);  
}

// Expense
message Expenses {
  repeated Expense expense = 1;
}
message Expense {
  enum Quadrant {
    Q1_NON_NEGOTIABLE = 0;
    Q2_IMPORTANT_NOT_URGENT = 1;
    Q3_NEGOTIABLE = 2;
    Q4_PURELY_DISCRETIONARY = 3;
  }

  string id = 1;
  string categoryId = 2;
  Quadrant quadrant = 3;
  bool fixed = 4;
  string title = 5;
  float high = 6;
  float low = 7;
  float amount = 8;
  CalculateOn calculateOn = 9;
  bool enabled = 10;
  int32 position = 11;
}
service ExpenseService {
  rpc findById (google.protobuf.StringValue) returns (Expense);
  rpc findByCategoryId (google.protobuf.StringValue) returns (stream Expense);
  rpc create (Expense) returns (Expense);
  rpc update (Expense) returns (Expense);
  rpc delete (google.protobuf.StringValue) returns (google.protobuf.Empty);  
}

// Paycheck
message Paychecks {
  repeated Paycheck paycheck = 1;
}
message Paycheck {
  enum Frequency {
    WEEKLY = 0;
    BIWEEKLY = 1;
    TWICE_MONTHLY = 2;
    MONTHLY = 3;
  }
  string id = 1;
  string budgetId = 2;
  string title = 3;
  float annualGross = 4;
  Frequency frequency = 5; 
}
service PaycheckService {
  rpc findById (google.protobuf.StringValue) returns (Paycheck);
  rpc findByBudgetId (google.protobuf.StringValue) returns (stream Paycheck);
  rpc create (Paycheck) returns (Paycheck);
  rpc update (Paycheck) returns (Paycheck);
  rpc delete (google.protobuf.StringValue) returns (google.protobuf.Empty);  
}

// Deduction
message Deductions {
  repeated Deduction deduction = 1;
}
message Deduction {
  enum TaxableType {
    FULLY_TAXABLE = 0;
    OSADI_TAXABLE = 1;
    NON_TAXABLE = 2;
  }

  string id = 1;
  string paycheckId = 2;
  string title = 3;
  float amount = 4;
  CalculateOn calculateOn = 5;
  TaxableType taxableType = 6;
  int32 position = 7;
  bool enabled = 8;

}
service DeductionService {
  rpc findById (google.protobuf.StringValue) returns (Deduction);
  rpc findByPaycheckId (google.protobuf.StringValue) returns (stream Deduction);
  rpc create (Deduction) returns (Deduction);
  rpc update (Deduction) returns (Deduction);
  rpc delete (google.protobuf.StringValue) returns (google.protobuf.Empty);  
}